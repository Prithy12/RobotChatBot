name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true
        default: ''
      release_type:
        description: 'Release type'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - development

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Update version in package.json
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
      - name: Install dependencies
        run: npm install
      
      - name: Build Production Package
        if: ${{ github.event.inputs.release_type == 'production' }}
        run: npm run package-prod
      
      - name: Build Development Package
        if: ${{ github.event.inputs.release_type == 'development' }}
        run: npm run package-dev
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Claude Desktop v${{ github.event.inputs.version }} ${{ github.event.inputs.release_type == 'development' && '(Development)' || '' }}
          draft: false
          prerelease: ${{ github.event.inputs.release_type == 'development' }}
      
      # Windows
      - name: Upload Windows Installer
        if: matrix.os == 'windows-latest' && github.event.inputs.release_type == 'production'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/prod/Claude-Desktop-Setup-${{ github.event.inputs.version }}.exe
          asset_name: Claude-Desktop-Setup-${{ github.event.inputs.version }}.exe
          asset_content_type: application/octet-stream
      
      # macOS
      - name: Upload macOS Installer
        if: matrix.os == 'macos-latest' && github.event.inputs.release_type == 'production'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/prod/Claude-Desktop-${{ github.event.inputs.version }}.dmg
          asset_name: Claude-Desktop-${{ github.event.inputs.version }}.dmg
          asset_content_type: application/octet-stream
      
      # Linux
      - name: Upload Linux AppImage
        if: matrix.os == 'ubuntu-latest' && github.event.inputs.release_type == 'production'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/prod/claude-desktop-${{ github.event.inputs.version }}.AppImage
          asset_name: claude-desktop-${{ github.event.inputs.version }}.AppImage
          asset_content_type: application/octet-stream
      
      # Upload the download.html and version.json to repo and docs folder
      - name: Commit download page and version file
        if: matrix.os == 'ubuntu-latest' && github.event.inputs.release_type == 'production'
        run: |
          # We're now using Jekyll with just markdown files
          # No need to copy assets as we're using theme defaults
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add download.html version.json docs/
          git commit -m "Update download page and version info for v${{ github.event.inputs.version }}"
          git push